public class Solution {
    public int maxEnvelopes(int[][] envelopes) {
        
        Arrays.sort(envelopes, new CompareMatrix());
        
        int tails[] = new int[envelopes.length];
        int size = 0;
        
        for (int i = 0; i < envelopes.length; i++){
            int value = envelopes[i][1];
            int index = Arrays.binarySearch(tails, 0, size, value);
            if (index < 0) index = -(index + 1);
            tails[index] = value;
            if (index == size) size++;
        }
        
        return size;
    }
    
    private class CompareMatrix implements Comparator<int[]>{
        public int compare(int[] a, int[] b){
            if (a[0] == b[0]){
                return b[1] - a[1];
            }
            return a[0] - b[0];
        }
    }
}

tags: dynamic programing, binary search
summary: Override compare method to sort matrix. Use width increasing order and heights decreasing order. Use similar method
         to find LIS of the second element. Time complexity O(nlogn).
